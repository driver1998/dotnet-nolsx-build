name: Build .NET SDK

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'dotnet VMR branch name'
        required: true
        type: string
        default: main-9.x-loong

jobs:
  run:
    runs-on: ubuntu-latest

    steps:

    # - name: Maximize build space
    #   uses: AdityaGarg8/remove-unwanted-software@v4.1
    #   with:
    #     remove-dotnet: 'true'
    #     remove-android: 'true'
    #     remove-haskell: 'true'
    #     remove-codeql: 'true'
    #     remove-cached-tools: 'true'        

    - name: Clone repository
      run: |
        git clone --depth 1 -b ${{ inputs.branch }} https://github.com/driver1998/dotnet-nolsx

    - name: Build
      run: |
        docker run --platform linux/amd64 --rm -v${{ github.workspace }}/dotnet-nolsx:/dotnet -w /dotnet -e ROOTFS_DIR=/crossrootfs/loongarch64 \
          mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-net10.0-cross-loongarch64 \
          sh -c '
            pushd src/runtime &&
            ./build.sh -c Release --cross --arch loongarch64 --os linux-musl &&
            popd &&
            pushd src/aspnetcore &&
            ./eng/build.sh --pack -c Release -arch loongarch64
          '

    - name: List assets directory
      run: |
        find "${{ github.workspace }}/dotnet/src/runtime/artifacts"

    - name: Upload .NET
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-sdk-linux-loongarch64
        path: |
          ${{ github.workspace }}/dotnet/src/runtime/artifacts/assets/Release/Sdk/*/dotnet-sdk-*
          ${{ github.workspace }}/dotnet/src/runtime/artifacts/packages/Release/Shipping/runtime/Microsoft.NETCore.App.Crossgen2.linux-loongarch64.*.nupkg
